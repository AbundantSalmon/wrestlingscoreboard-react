{"version":3,"sources":["common.ts","PlayerEntryView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["capitaliseString","s","charAt","toUpperCase","slice","categories","Female","Male","Freestyle","PlayerEntryView","className","id","playerColour","PlayerEntry","type","MatchInformation","useState","mat","age","gender","style","weight","matchInformation","setMatchInformation","ageOptions","Object","keys","map","value","key","genderOptions","styleOptions","weightOptions","updateDropDowns","e","dropDown","target","zeroGender","zeroStyle","zeroWeight","parseInt","Error","htmlFor","onChange","name","visibility","SubmitMatchDetails","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78c859b9.chunk.js","sourcesContent":["export const capitaliseString: CapitaliseString = (s: string) => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };","import React, { useState, VFC } from 'react';\nimport './PlayerEntryView.css';\nimport { capitaliseString } from './common';\n\nconst categories: { [index: string]: { [index: string]: { [index: string]: number[] } } } =\n{\n    // Age only block\n    \"6-7 yrs\": {\n        \"N/A\": {\n            \"N/A\": [19, 23, 27, 35, 42, 53, 66, 73]\n        }\n    },\n    \"8-9 yrs\": {\n        \"N/A\": {\n            \"N/A\": [23, 27, 35, 42, 53, 66, 73]\n        }\n    },\n    \"10-11 yrs\": {\n        \"N/A\": {\n            \"N/A\": [23, 27, 35, 42, 53, 66, 73, 85]\n        }\n    },\n    // Age and sex block\n    \"12-13 yrs\": {\n        Female: {\n            \"N/A\": [33, 37, 44, 50, 55, 62, 73, 85]\n        },\n        Male: {\n            \"N/A\": [35, 41, 48, 55, 62, 69, 75, 89]\n        },\n    },\n    \"14-15 yrs\": {\n        Female: {\n            \"N/A\": [35, 40, 45, 50, 55, 60, 65, 70]\n        },\n        Male: {\n            \"N/A\": [35, 42, 49, 56, 63, 70, 78, 89]\n        },\n    },\n    \"16-17 yrs\": {\n        Female: {\n            \"N/A\": [40, 43, 49, 56, 61, 65, 69, 73]\n        },\n        Male: {\n            \"N/A\": [48, 55, 62, 69, 74, 86, 92, 110]\n        },\n    },\n    // Age, sex, and male style block\n    \"18-20 yrs\": {\n        Female: {\n            \"N/A\": [50, 53, 57, 62, 68, 76, 85],\n        },\n        Male: {\n            Freestyle: [57, 65, 74, 79, 86, 92, 97, 125],\n            \"Greco-Roman\": [60, 67, 77, 87, 97, 130]\n        }\n    },\n    \"21yrs+\": {\n        Female: {\n            \"N/A\": [50, 53, 57, 62, 68, 76, 85],\n        },\n        Male: {\n            Freestyle: [57, 65, 74, 79, 86, 92, 97, 125],\n            \"Greco-Roman\": [60, 67, 77, 87, 97, 130]\n        }\n    }\n}\n\ntype PlayerEntryViewProps = {\n\n};\n\nexport const PlayerEntryView: React.VFC<PlayerEntryViewProps> = () => {\n    return (\n        <form className=\"playerEntryView\">\n            <div>\n                <h1>Match Details</h1>\n            </div>\n            <div id=\"playerEntryMain\">\n                <PlayerEntry playerColour={\"red\"} />\n                <PlayerEntry playerColour={\"blue\"} />\n                <MatchInformation />\n                <SubmitMatchDetails />\n            </div>\n        </form>\n    );\n\n};\n\ntype PlayerEntryProps = {\n    playerColour: string;\n};\n\nconst PlayerEntry: React.VFC<PlayerEntryProps> = ({ playerColour }) => {\n    return (\n        <div className={\"playerEntry \" + playerColour}>\n            <label>\n                {capitaliseString(playerColour)}'s First Name<br /> <input type=\"text\"></input>\n            </label>\n            <label>\n                {capitaliseString(playerColour)}'s Last Name<br /> <input type=\"text\"></input>\n            </label>\n            <label>\n                {capitaliseString(playerColour)}'s Club Name<br /> <input type=\"text\"></input>\n            </label>\n        </div>\n    );\n\n};\n\ntype MatchInformationProps = {\n\n};\n\nconst MatchInformation: React.VFC<MatchInformationProps> = () => {\n    const initalMatchInformation: MatchInformation = {\n        mat: \"A\",\n        age: \"6-7 yrs\",\n        gender: \"N/A\",\n        style: \"N/A\",\n        weight: 19\n    };\n\n    const [matchInformation, setMatchInformation] = useState(initalMatchInformation);\n\n    const ageOptions = Object.keys(categories).map((value) => <option value={value} key={value}>{value}</option>);\n    const genderOptions = Object.keys(categories[matchInformation.age]).map((value) => <option value={value} key={value}>{value}</option>);\n    const styleOptions = Object.keys(categories[matchInformation.age][matchInformation.gender]).map((value: string) => <option value={value} key={value}>{value}</option>);\n    const weightOptions = categories[matchInformation.age][matchInformation.gender][matchInformation.style].map((value: number) => <option value={value} key={value}>{value}</option>);\n\n    const updateDropDowns = (e: React.ChangeEvent<HTMLSelectElement>, dropDown: string) => {\n        //resets every subsequent dropdown to the default 0 index value, forces an update of state to ensure that valid options are stored\n        switch (dropDown) {\n            case \"mat\":\n                setMatchInformation({ ...matchInformation, mat: e.target.value });\n                break;\n            case \"age\":\n                {\n                    let zeroGender = Object.keys(categories[e.target.value])[0];\n                    let zeroStyle = Object.keys(categories[e.target.value][zeroGender])[0];\n                    let zeroWeight = categories[e.target.value][zeroGender][zeroStyle][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            age: e.target.value,\n                            gender: zeroGender,\n                            style: zeroStyle,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"gender\":\n                {\n                    let zeroStyle = Object.keys(categories[matchInformation.age][e.target.value])[0];\n                    let zeroWeight = categories[matchInformation.age][e.target.value][zeroStyle][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            gender: e.target.value,\n                            style: zeroStyle,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"style\":\n                {\n                    let zeroWeight = categories[matchInformation.age][matchInformation.gender][e.target.value][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            style: e.target.value,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"weight\":\n                setMatchInformation(\n                    {\n                        ...matchInformation,\n                        weight: parseInt(e.target.value)\n                    });\n                break;\n            default:\n                throw new Error(\"Error: dropdowns\");\n        }\n    }\n\n    return (\n        <div className=\"matchInformation\">\n            <label htmlFor=\"mat-select\">\n                Mat\n            <br />\n                <select\n                    onChange={e => updateDropDowns(e, \"mat\")}\n                    name=\"mat\" id=\"mat-select\">\n                    <option value=\"A\">A</option>\n                    <option value=\"B\">B</option>\n                </select>\n            </label>\n\n            <label htmlFor=\"age-select\">\n                Age\n            <br />\n                <select\n                    value={matchInformation.age}\n                    onChange={e =>\n                        updateDropDowns(e, \"age\")\n                    }\n                    name=\"age\" id=\"age-select\">\n                    {ageOptions}\n                </select>\n            </label>\n\n            <label htmlFor=\"gender-select\" style={matchInformation.gender === \"N/A\" ? { visibility: \"hidden\" } : {}}>\n                Gender\n            <br />\n                <select\n                    value={matchInformation.gender}\n                    onChange={e =>\n                        updateDropDowns(e, \"gender\")\n                    }\n                    name=\"gender\" id=\"gender-select\">\n                    {genderOptions}\n                </select>\n            </label>\n\n            <label htmlFor=\"style-select\" style={matchInformation.style === \"N/A\" ? { visibility: \"hidden\" } : {}}>\n                Style\n            <br />\n                <select\n                    value={matchInformation.style}\n                    onChange={e =>\n                        updateDropDowns(e, \"style\")\n                    }\n                    name=\"style\" id=\"style-select\">\n                    {styleOptions}\n                </select>\n            </label>\n\n            <label htmlFor=\"weight-select\">\n                Weight\n            <br />\n                <select\n                    value={matchInformation.weight}\n                    onChange={e =>\n                        updateDropDowns(e, \"weight\")\n                    }\n                    name=\"weight\" id=\"weight-select\">\n                    {weightOptions}\n                </select>\n            </label>\n        </div>\n    );\n\n};\n\ntype SubmitMatchDetails = {\n\n};\n\nconst SubmitMatchDetails: React.VFC<SubmitMatchDetails> = () => {\n    return (\n        <>\n        </>\n    );\n};","import React from 'react';\nimport './App.css';\n\nimport { PlayerEntryView } from './PlayerEntryView';\n//import Timer from 'easytimer.js';\n\nconst App: React.VFC = () => {\n  return (\n    <PlayerEntryView />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}