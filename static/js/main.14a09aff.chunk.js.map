{"version":3,"sources":["common.ts","PlayerEntryView.tsx","MainHeader.tsx","Navigation.tsx","ScoreboardControl.tsx","Scoreboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["capitaliseString","s","charAt","toUpperCase","slice","categories","Female","Male","Freestyle","ContextTotalDisplayMethod","React","createContext","undefined","PlayerEntryView","visibility","totalDisplayMethod","matchStateMethod","matchPlayerInformationMethod","useState","mat","age","gender","style","weight","matchInformation","setMatchInformation","playerEntries","setPlayerEntries","top","left","width","height","position","display","justifyContent","alignItems","backgroundColor","className","id","playerColour","Provider","value","setDetails","matchState","setMatchState","setMatchPlayerInformation","totalDisplayState","setTotalDisplayState","playersSet","playerEntryView","PlayerEntry","type","firstName","onChange","e","newPlayerEntry","target","lastName","clubName","MatchInformation","ageOptions","Object","keys","map","key","genderOptions","styleOptions","weightOptions","updateDropDowns","dropDown","zeroGender","zeroStyle","zeroWeight","parseInt","Error","htmlFor","name","SubmitMatchDetails","useContext","onClick","MainHeader","alt","src","Navigation","resetCurrentMatch","console","log","PointsControl","PenaltyControl","PinControl","Scoreboard","matchPlayerInformation","MiddleView","ageDiv","gameType","PlayerDataView","ScoreBox","initalTotalDisplayState","mainHeader","navigation","scoreboard","initalMatchPlayerInformation","red","blue","initalMatchState","started","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14a09aff.chunk.js","sourcesContent":["export const capitaliseString: CapitaliseString = (s: string) => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };","import React, { useContext, useState } from 'react';\nimport './PlayerEntryView.css';\nimport { capitaliseString } from './common';\n\nconst categories: { [index: string]: { [index: string]: { [index: string]: number[] } } } =\n{\n    // Age only block\n    \"6-7 yrs\": {\n        \"N/A\": {\n            \"N/A\": [19, 23, 27, 35, 42, 53, 66, 73]\n        }\n    },\n    \"8-9 yrs\": {\n        \"N/A\": {\n            \"N/A\": [23, 27, 35, 42, 53, 66, 73]\n        }\n    },\n    \"10-11 yrs\": {\n        \"N/A\": {\n            \"N/A\": [23, 27, 35, 42, 53, 66, 73, 85]\n        }\n    },\n    // Age and sex block\n    \"12-13 yrs\": {\n        Female: {\n            \"N/A\": [33, 37, 44, 50, 55, 62, 73, 85]\n        },\n        Male: {\n            \"N/A\": [35, 41, 48, 55, 62, 69, 75, 89]\n        },\n    },\n    \"14-15 yrs\": {\n        Female: {\n            \"N/A\": [35, 40, 45, 50, 55, 60, 65, 70]\n        },\n        Male: {\n            \"N/A\": [35, 42, 49, 56, 63, 70, 78, 89]\n        },\n    },\n    \"16-17 yrs\": {\n        Female: {\n            \"N/A\": [40, 43, 49, 56, 61, 65, 69, 73]\n        },\n        Male: {\n            \"N/A\": [48, 55, 62, 69, 74, 86, 92, 110]\n        },\n    },\n    // Age, sex, and male style block\n    \"18-20 yrs\": {\n        Female: {\n            \"N/A\": [50, 53, 57, 62, 68, 76, 85],\n        },\n        Male: {\n            Freestyle: [57, 65, 74, 79, 86, 92, 97, 125],\n            \"Greco-Roman\": [60, 67, 77, 87, 97, 130]\n        }\n    },\n    \"21yrs+\": {\n        Female: {\n            \"N/A\": [50, 53, 57, 62, 68, 76, 85],\n        },\n        Male: {\n            Freestyle: [57, 65, 74, 79, 86, 92, 97, 125],\n            \"Greco-Roman\": [60, 67, 77, 87, 97, 130]\n        }\n    }\n}\n\ntype PlayerEntryViewProps = {\n    visibility: boolean;\n    totalDisplayMethod: TotalDisplayMethod;\n    matchStateMethod: MatchStateMethod;\n    matchPlayerInformationMethod: MatchPlayerInformationMethod;\n};\n\nconst ContextTotalDisplayMethod = React.createContext<TotalDisplayMethod>(undefined!);\n\nexport const PlayerEntryView: React.VFC<PlayerEntryViewProps> = ({ visibility, totalDisplayMethod, matchStateMethod, matchPlayerInformationMethod }) => {\n    //Store the state of the entered match information\n    const initalMatchInformation: MatchInformation = {\n        mat: \"A\",\n        age: \"6-7 yrs\",\n        gender: \"N/A\",\n        style: \"N/A\",\n        weight: 19\n    };\n    const [matchInformation, setMatchInformation] = useState(initalMatchInformation);\n    //Store the state of the entered player information\n    const initalPlayerEntries: { [playerColor: string]: MatchPlayer } = {\n        \"red\": {\n            \"playerColor\": \"red\",\n            \"firstName\": \"Red First Name\",\n            \"lastName\": \"\",\n            \"clubName\": \"\"\n        },\n        \"blue\": {\n            \"playerColor\": \"blue\",\n            \"firstName\": \"Blue First Name\",\n            \"lastName\": \"\",\n            \"clubName\": \"\"\n        }\n    }\n\n    const [playerEntries, setPlayerEntries] = useState(initalPlayerEntries);\n\n    const setDetails = () => {\n        //set the matchInformation to the matchState, playerInformation from the App Component and close the playerEntryView\n        const [matchState, setMatchState] = matchStateMethod;\n        const [, setMatchPlayerInformation] = matchPlayerInformationMethod;\n        const [totalDisplayState, setTotalDisplayState] = totalDisplayMethod;\n\n\n        setMatchState({ ...matchState, ...matchInformation, playersSet: true });\n        const copyPlayerEntries = { ...playerEntries };\n        setMatchPlayerInformation(copyPlayerEntries);\n        setTotalDisplayState({ ...totalDisplayState, playerEntryView: false });\n\n    }\n\n    return (\n\n        < div style={visibility ? {\n            top: \"0\",\n            left: \"0\",\n            width: \"100vw\",\n            height: \"100vh\",\n            position: \"fixed\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"#8080807E\",\n\n        }\n            : { display: \"none\" }}>\n            <div className=\"playerEntryView\" id=\"playerEntryView\">\n                <div>\n                    <h1>Match Details</h1>\n                </div>\n                <div id=\"playerEntryMain\">\n                    <PlayerEntry playerColour={\"red\"} playerEntries={playerEntries} setPlayerEntries={setPlayerEntries} />\n                    <PlayerEntry playerColour={\"blue\"} playerEntries={playerEntries} setPlayerEntries={setPlayerEntries} />\n                    <MatchInformation matchInformation={matchInformation} setMatchInformation={setMatchInformation} />\n                </div>\n                <div id=\"playerEntrySubmission\">\n                    <ContextTotalDisplayMethod.Provider value={totalDisplayMethod}>\n                        <SubmitMatchDetails setDetails={setDetails} />\n                    </ContextTotalDisplayMethod.Provider>\n                </div>\n            </div>\n        </div>\n\n    );\n\n};\n\ntype PlayerEntryProps = {\n    playerColour: string;\n    playerEntries: { [playerColor: string]: MatchPlayer };\n    setPlayerEntries: React.Dispatch<React.SetStateAction<{ [playerColor: string]: MatchPlayer }>>;\n}\n\nconst PlayerEntry: React.VFC<PlayerEntryProps> = ({ playerColour, playerEntries, setPlayerEntries }) => {\n    return (\n        <div className={\"playerEntry \" + playerColour}>\n            <label>\n                {capitaliseString(playerColour)}'s First Name<br />\n                <input type=\"text\" value={playerEntries[playerColour].firstName} onChange={e => {\n                    const newPlayerEntry = { ...playerEntries };\n                    newPlayerEntry[playerColour].firstName = e.target.value;\n                    setPlayerEntries(newPlayerEntry as MatchPlayerInformation);\n                }} />\n            </label>\n            <label>\n                {capitaliseString(playerColour)}'s Last Name<br />\n                <input type=\"text\" value={playerEntries[playerColour].lastName} onChange={e => {\n                    const newPlayerEntry = { ...playerEntries };\n                    newPlayerEntry[playerColour].lastName = e.target.value;\n                    setPlayerEntries(newPlayerEntry as MatchPlayerInformation);\n                }} />\n            </label>\n            <label>\n                {capitaliseString(playerColour)}'s Club Name<br />\n                <input type=\"text\" value={playerEntries[playerColour].clubName} onChange={e => {\n                    const newPlayerEntry = { ...playerEntries };\n                    newPlayerEntry[playerColour].clubName = e.target.value;\n                    setPlayerEntries(newPlayerEntry as MatchPlayerInformation);\n                }} />\n            </label>\n        </div>\n    );\n\n};\n\ntype MatchInformationProps = {\n    matchInformation: MatchInformation;\n    setMatchInformation: React.Dispatch<React.SetStateAction<MatchInformation>>;\n};\n\nconst MatchInformation: React.VFC<MatchInformationProps> = ({ matchInformation, setMatchInformation }) => {\n    const ageOptions = Object.keys(categories).map((value) => <option value={value} key={value}>{value}</option>);\n    const genderOptions = Object.keys(categories[matchInformation.age]).map((value) => <option value={value} key={value}>{value}</option>);\n    const styleOptions = Object.keys(categories[matchInformation.age][matchInformation.gender]).map((value: string) => <option value={value} key={value}>{value}</option>);\n    const weightOptions = categories[matchInformation.age][matchInformation.gender][matchInformation.style].map((value: number) => <option value={value} key={value}>{value}</option>);\n\n    const updateDropDowns = (e: React.ChangeEvent<HTMLSelectElement>, dropDown: string) => {\n        //resets every subsequent dropdown to the default 0 index value, forces an update of state to ensure that valid options are stored\n        switch (dropDown) {\n            case \"mat\":\n                setMatchInformation({ ...matchInformation, mat: e.target.value });\n                break;\n            case \"age\":\n                {\n                    let zeroGender = Object.keys(categories[e.target.value])[0];\n                    let zeroStyle = Object.keys(categories[e.target.value][zeroGender])[0];\n                    let zeroWeight = categories[e.target.value][zeroGender][zeroStyle][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            age: e.target.value,\n                            gender: zeroGender,\n                            style: zeroStyle,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"gender\":\n                {\n                    let zeroStyle = Object.keys(categories[matchInformation.age][e.target.value])[0];\n                    let zeroWeight = categories[matchInformation.age][e.target.value][zeroStyle][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            gender: e.target.value,\n                            style: zeroStyle,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"style\":\n                {\n                    let zeroWeight = categories[matchInformation.age][matchInformation.gender][e.target.value][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            style: e.target.value,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"weight\":\n                setMatchInformation(\n                    {\n                        ...matchInformation,\n                        weight: parseInt(e.target.value)\n                    });\n                break;\n            default:\n                throw new Error(\"Error: dropdowns\");\n        }\n    }\n\n    return (\n        <div className=\"matchInformation\">\n            <label htmlFor=\"mat-select\">\n                Mat\n            <br />\n                <select\n                    onChange={e => updateDropDowns(e, \"mat\")}\n                    name=\"mat\" id=\"mat-select\">\n                    <option value=\"A\">A</option>\n                    <option value=\"B\">B</option>\n                </select>\n            </label>\n\n            <label htmlFor=\"age-select\">\n                Age\n            <br />\n                <select\n                    value={matchInformation.age}\n                    onChange={e =>\n                        updateDropDowns(e, \"age\")\n                    }\n                    name=\"age\" id=\"age-select\">\n                    {ageOptions}\n                </select>\n            </label>\n\n            <label htmlFor=\"gender-select\" style={matchInformation.gender === \"N/A\" ? { visibility: \"hidden\" } : {}}>\n                Gender\n            <br />\n                <select\n                    value={matchInformation.gender}\n                    onChange={e =>\n                        updateDropDowns(e, \"gender\")\n                    }\n                    name=\"gender\" id=\"gender-select\">\n                    {genderOptions}\n                </select>\n            </label>\n\n            <label htmlFor=\"style-select\" style={matchInformation.style === \"N/A\" ? { visibility: \"hidden\" } : {}}>\n                Style\n            <br />\n                <select\n                    value={matchInformation.style}\n                    onChange={e =>\n                        updateDropDowns(e, \"style\")\n                    }\n                    name=\"style\" id=\"style-select\">\n                    {styleOptions}\n                </select>\n            </label>\n\n            <label htmlFor=\"weight-select\">\n                Weight\n            <br />\n                <select\n                    value={matchInformation.weight}\n                    onChange={e =>\n                        updateDropDowns(e, \"weight\")\n                    }\n                    name=\"weight\" id=\"weight-select\">\n                    {weightOptions}\n                </select>\n            </label>\n        </div>\n    );\n\n};\n\ntype SubmitMatchDetails = {\n    setDetails: () => void;\n};\n\nconst SubmitMatchDetails: React.VFC<SubmitMatchDetails> = ({ setDetails }) => {\n    const totalDisplayMethod = useContext(ContextTotalDisplayMethod);\n    const [totalDisplayState, setTotalDisplayState] = totalDisplayMethod;\n    return (\n        <>\n            <button onClick={setDetails}>Confirm</button>\n            <button onClick={() => setTotalDisplayState({ ...totalDisplayState, playerEntryView: false })}>Cancel</button>\n        </>\n    );\n};","import React from 'react';\nimport './MainHeader.css';\n\ntype MainHeaderProps = {\n    visibility: boolean;\n};\n\nexport const MainHeader: React.VFC<MainHeaderProps> = ({ visibility }) => {\n    return (\n        <div id=\"mainHeader\" style={visibility ? {} : { visibility: \"hidden\" }}>\n            <span id=\"logo\"><img alt=\"Wrestling WA Logo\" src=\"http://wrestlingwa.org/wp-content/uploads/wwa_logo.png\" /></span>\n            <span id=\"fedName\">Wrestling Western Australia <br /> Scoreboard</span>\n        </div>\n    )\n};","import React from 'react';\nimport './Navigation.css';\n\ntype NavigationProps = {\n    visibility: boolean;\n    totalDisplayMethod: TotalDisplayMethod;\n    resetCurrentMatch: () => void;\n};\n\nexport const Navigation: React.VFC<NavigationProps> = ({ visibility, totalDisplayMethod, resetCurrentMatch }) => {\n    console.log(\"nav: \" + visibility);\n    console.log(totalDisplayMethod);\n    let [totalDisplayState, setTotalDisplayState] = totalDisplayMethod;\n\n    return (\n        <div id=\"navigation\" style={visibility ? {} : { visibility: \"hidden\" }}>\n            <button className=\"navigationButton\" id=\"setMatchButton\" onClick={() => setTotalDisplayState({ ...totalDisplayState, playerEntryView: true })}>Set Match</button>\n            <button className=\"navigationButton\" id=\"resetMatchButton\" onClick={() => resetCurrentMatch()}>Reset All</button>\n            <button className=\"navigationButton\" id=\"importButton\">Import</button>\n            <button className=\"navigationButton\" id=\"fixturesButton\">Fixtures</button>\n            <button className=\"navigationButton\" id=\"prevButton\">{\"<<\"}</button>\n            <button className=\"navigationButton\" id=\"nextButton\">{\">>\"}</button>\n        </div>\n    )\n};","//Maintain all control logic and interfaces for scorebaord in this file.\n\nimport React from 'react';\nimport './Scoreboard.css';\n\n\n\n\ntype PointsControlProps = {\n    playerColour: string;\n};\n\nexport const PointsControl: React.VFC<PointsControlProps> = ({ playerColour }) => {\n\n    return (\n        <div className={\"points-control \" + playerColour}>\n            <div className={\"buttonsRow \" + playerColour}>\n                <button value={4}>+5</button>\n                <button value={3}>+4</button>\n                <button value={2}>+2</button>\n                <button value={1}>+1</button>\n                <button value={0}>-1</button>\n            </div>\n        </div>\n    )\n};\n\ntype PenaltyControlProps = {\n    playerColour: string;\n};\n\nexport const PenaltyControl: React.VFC<PenaltyControlProps> = ({ playerColour }) => {\n\n    return (\n        <div className={\"penalty \" + playerColour}>\n            <button className=\"shotclockbtn\" id={\"shotclockbutton\" + playerColour}>Shot clock</button>\n            <button className=\"warning\">Warning</button>\n        </div>\n    )\n};\n\ntype PinControlProps = {\n    playerColour: string;\n};\n\nexport const PinControl: React.VFC<PinControlProps> = ({ playerColour }) => {\n\n    return (\n        <div className={\"pin \" + playerColour}>\n            <button>Pin!</button>\n        </div>\n    )\n};","import React from 'react';\nimport './Scoreboard.css';\nimport { capitaliseString } from './common';\nimport { PointsControl, PenaltyControl, PinControl } from './ScoreboardControl';\n\ntype ScoreboardProps = {\n    visibility: boolean;\n    matchPlayerInformationMethod: MatchPlayerInformationMethod;\n    matchStateMethod: MatchStateMethod;\n};\n\nexport const Scoreboard: React.VFC<ScoreboardProps> = ({ visibility, matchPlayerInformationMethod, matchStateMethod }) => {\n\n    const [matchPlayerInformation, setMatchPlayerInformation] = matchPlayerInformationMethod;\n    const [matchState, setMatchState] = matchStateMethod;\n\n    return (\n        <div id=\"outer\">\n            <div id=\"scoreboard\" style={visibility ? {} : { visibility: \"hidden\" }}>\n                <PlayerDataView playerColour=\"red\" matchPlayerInformation={matchPlayerInformation} />\n                <MiddleView matchState={matchState} />\n                <PlayerDataView playerColour=\"blue\" matchPlayerInformation={matchPlayerInformation} />\n                <ScoreBox playerColour=\"red\" />\n                <ScoreBox playerColour=\"blue\" />\n                <PointsControl playerColour=\"red\" />\n                <PointsControl playerColour=\"blue\" />\n                <PenaltyControl playerColour=\"red\" />\n                <PenaltyControl playerColour=\"blue\" />\n                <PinControl playerColour=\"red\" />\n                <PinControl playerColour=\"blue\" />\n            </div>\n        </div>\n    )\n};\n\ntype MiddleViewProps = {\n    matchState: MatchState\n};\n\nconst MiddleView: React.VFC<MiddleViewProps> = ({ matchState }) => {\n    const gameType = () => {\n        const ageDiv = matchState.age;\n        const styleDiv = matchState.style;\n        let gameType = \"\";\n        if (styleDiv === \"Greco-Roman\") {\n            gameType = \"Senior Greco-Roman\";\n        } else if (ageDiv === \"18-20 yrs\" || ageDiv === \"21yrs+\") {\n            gameType = \"Senior Freestyle\";\n        } else {\n            gameType = \"Junior Freestyle\";\n        }\n        return `${gameType}, ${ageDiv}, ${matchState.weight}kg`;\n    };\n\n\n    return (\n        <div className=\"middle\">\n            <span id=\"period\">Period 1</span><br />\n            <span id=\"gameType\">{gameType()}</span>\n            <br />\n            <span id=\"timer\">0:00</span>\n            <br />\n            <button className=\"timer\" id=\"startTimer\" >▶</button>\n        </div>\n    )\n};\n\ntype PlayerDataViewProps = {\n    playerColour: string;\n    matchPlayerInformation: { [playerColor: string]: MatchPlayer };\n};\n\nconst PlayerDataView: React.VFC<PlayerDataViewProps> = ({ playerColour, matchPlayerInformation }) => {\n\n    return (\n        <div className={\"playerData \" + playerColour} >\n            <span className={\"firstName \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].firstName}</span><br />\n            <span className={\"lastName \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].lastName}</span><br />\n            <span className={\"clubName \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].clubName}</span>\n        </div >\n    )\n};\n\ntype ScoreBoxProps = {\n    playerColour: string;\n};\n\nconst ScoreBox: React.VFC<ScoreBoxProps> = ({ playerColour }) => {\n\n    return (\n        <div className={\"scorebox \" + playerColour}>\n            <div className={\"markerWarning \" + capitaliseString(playerColour)}></div>\n            <div className={\"score \" + capitaliseString(playerColour)}>0</div>\n            <div className={\"shotclock \" + capitaliseString(playerColour)}>0:00</div>\n        </div>\n    )\n};","import React, { useState } from 'react';\nimport './App.css';\n\nimport { PlayerEntryView } from './PlayerEntryView';\nimport { MainHeader } from './MainHeader';\nimport { Navigation } from './Navigation';\nimport { Scoreboard } from './Scoreboard';\n\n//import Timer from 'easytimer.js';\n\nconst initalTotalDisplayState: TotalDisplayState = {\n  mainHeader: true,\n  navigation: true,\n  playerEntryView: false,\n  scoreboard: true,\n};\n\nconst initalMatchPlayerInformation: MatchPlayerInformation = {\n  red: {\n    \"playerColor\": \"red\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"clubName\": \"clubName\"\n  },\n  blue: {\n    \"playerColor\": \"blue\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"clubName\": \"clubName\"\n  }\n};\n\nconst initalMatchState: MatchState = {\n  mat: \"\",\n  age: \"\",\n  gender: \"\",\n  style: \"\",\n  weight: 0,\n  playersSet: false,\n  started: false,\n};\n\nconst App: React.VFC = () => {\n  const [totalDisplayState, setTotalDisplayState] = useState(initalTotalDisplayState);\n  const totalDisplayMethod: TotalDisplayMethod = [totalDisplayState, setTotalDisplayState];\n\n  const [matchPlayerInformation, setMatchPlayerInformation] = useState(initalMatchPlayerInformation);\n  const matchPlayerInformationMethod: MatchPlayerInformationMethod = [matchPlayerInformation, setMatchPlayerInformation]\n\n  const [matchState, setMatchState] = useState(initalMatchState);\n  const matchStateMethod: MatchStateMethod = [matchState, setMatchState];\n\n  const resetCurrentMatch = () => {\n    setMatchPlayerInformation({ ...initalMatchPlayerInformation });\n    setMatchState({ ...initalMatchState });\n  };\n\n  console.log(matchState);\n  console.log(matchPlayerInformation);\n\n  return (\n    <>\n      <MainHeader visibility={totalDisplayState.mainHeader} />\n      <Navigation visibility={totalDisplayState.navigation} totalDisplayMethod={totalDisplayMethod} resetCurrentMatch={resetCurrentMatch} />\n      <PlayerEntryView visibility={totalDisplayState.playerEntryView} totalDisplayMethod={totalDisplayMethod} matchStateMethod={matchStateMethod} matchPlayerInformationMethod={matchPlayerInformationMethod} />\n      <Scoreboard visibility={totalDisplayState.scoreboard} matchPlayerInformationMethod={matchPlayerInformationMethod} matchStateMethod={matchStateMethod} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}