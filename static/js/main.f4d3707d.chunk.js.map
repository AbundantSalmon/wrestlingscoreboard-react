{"version":3,"sources":["common.ts","PlayerEntryView.tsx","MainHeader.tsx","Navigation.tsx","ScoreboardControl.tsx","Scoreboard.tsx","VictoryScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["capitaliseString","s","charAt","toUpperCase","slice","categories","Female","Male","Freestyle","ContextTotalDisplayMethod","React","createContext","undefined","PlayerEntryView","visibility","totalDisplayMethod","matchStateMethod","matchPlayerInformationMethod","useState","mat","age","gender","style","weight","matchInformation","setMatchInformation","playerEntries","setPlayerEntries","Dialog","open","maxWidth","DialogTitle","color","DialogContent","Grid","container","id","spacing","alignItems","direction","item","xs","playerColour","DialogActions","ButtonGroup","size","variant","Provider","value","setDetails","matchState","setMatchState","setMatchPlayerInformation","totalDisplayState","setTotalDisplayState","theGameType","gameType","initialTimerValue","playersSet","currentTime","playerEntryView","PlayerEntry","Paper","className","elevation","height","textAlign","TextField","label","firstName","onChange","e","newPlayerEntry","target","lastName","clubName","MatchInformation","ageOptions","Object","keys","map","MenuItem","key","genderOptions","styleOptions","weightOptions","toString","updateDropDowns","dropDown","eTargetValue","zeroGender","zeroStyle","zeroWeight","parseInt","Error","FormControl","width","InputLabel","Select","SubmitMatchDetails","useContext","Button","onClick","MainHeader","alt","src","Navigation","ResetCurrentMatch","console","log","disabled","PointsControl","updateScore","PenaltyControl","handleWarningButton","handleShotClockButton","PinControl","handlePinButton","phases","Scoreboard","timer","Victory","matchPlayerInformation","useCallback","player","score","includes","started","newMatchPlayerInformation","shotClockOn","checkVictoryState","pause","updateCurrentTime","getTimeValues","getTotalTimeValues","seconds","shotClockSeconds","filter","shotClockPlayer","resolveTimerEnd","phase","paused","useEffect","addEventListener","removeEventListener","warnings","element","MiddleView","backgroundColor","start","countdown","startValues","icon","PlayerDataView","ScoreBox","numberOfMarkers","warningMarkerText","i","warningMarkers","technicalSuperiorityThreshold","blue","red","VictoryScreen","victoryState","SetVisibilityOf","top","left","position","display","justifyContent","playerName","reason","initialTotalDisplayState","mainHeader","navigation","scoreboard","victoryScreen","initialMatchPlayerInformation","initialMatchState","initialVictoryState","App","Timer","setVictoryState","theme","createMuiTheme","palette","primary","main","action","disabledBackground","ThemeProvider","stop","playerInfo","component","state","newTotalDisplayState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4d3707d.chunk.js","sourcesContent":["export const capitaliseString: CapitaliseString = (s: string) => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };","import React, { useContext, useState } from 'react';\nimport './PlayerEntryView.css';\nimport { capitaliseString } from './common';\nimport { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputLabel, MenuItem, Paper, Select, TextField } from '@material-ui/core';\n\nconst categories: { [index: string]: { [index: string]: { [index: string]: number[] } } } =\n{\n    // Age only block\n    \"6-7 yrs\": {\n        \"N/A\": {\n            \"N/A\": [19, 23, 27, 35, 42, 53, 66, 73]\n        }\n    },\n    \"8-9 yrs\": {\n        \"N/A\": {\n            \"N/A\": [23, 27, 35, 42, 53, 66, 73]\n        }\n    },\n    \"10-11 yrs\": {\n        \"N/A\": {\n            \"N/A\": [23, 27, 35, 42, 53, 66, 73, 85]\n        }\n    },\n    // Age and sex block\n    \"12-13 yrs\": {\n        Female: {\n            \"N/A\": [33, 37, 44, 50, 55, 62, 73, 85]\n        },\n        Male: {\n            \"N/A\": [35, 41, 48, 55, 62, 69, 75, 89]\n        },\n    },\n    \"14-15 yrs\": {\n        Female: {\n            \"N/A\": [35, 40, 45, 50, 55, 60, 65, 70]\n        },\n        Male: {\n            \"N/A\": [35, 42, 49, 56, 63, 70, 78, 89]\n        },\n    },\n    \"16-17 yrs\": {\n        Female: {\n            \"N/A\": [40, 43, 49, 56, 61, 65, 69, 73]\n        },\n        Male: {\n            \"N/A\": [48, 55, 62, 69, 74, 86, 92, 110]\n        },\n    },\n    // Age, sex, and male style block\n    \"18-20 yrs\": {\n        Female: {\n            \"N/A\": [50, 53, 57, 62, 68, 76, 85],\n        },\n        Male: {\n            Freestyle: [57, 65, 74, 79, 86, 92, 97, 125],\n            \"Greco-Roman\": [60, 67, 77, 87, 97, 130]\n        }\n    },\n    \"21yrs+\": {\n        Female: {\n            \"N/A\": [50, 53, 57, 62, 68, 76, 85],\n        },\n        Male: {\n            Freestyle: [57, 65, 74, 79, 86, 92, 97, 125],\n            \"Greco-Roman\": [60, 67, 77, 87, 97, 130]\n        }\n    }\n}\n\ntype PlayerEntryViewProps = {\n    visibility: boolean;\n    totalDisplayMethod: TotalDisplayMethod;\n    matchStateMethod: MatchStateMethod;\n    matchPlayerInformationMethod: MatchPlayerInformationMethod;\n};\n\nconst ContextTotalDisplayMethod = React.createContext<TotalDisplayMethod>(undefined!);\n\nexport const PlayerEntryView: React.VFC<PlayerEntryViewProps> = ({ visibility, totalDisplayMethod, matchStateMethod, matchPlayerInformationMethod }) => {\n    //Store the state of the entered match information\n    const initialMatchInformation: MatchInformation = {\n        mat: \"A\",\n        age: \"6-7 yrs\",\n        gender: \"N/A\",\n        style: \"N/A\",\n        weight: 19\n    };\n    const [matchInformation, setMatchInformation] = useState(initialMatchInformation);\n    //Store the state of the entered player information\n    const initialPlayerEntries: MatchPlayerInformation = {\n        \"red\": {\n            \"playerColor\": \"red\",\n            \"firstName\": \"Red First Name\",\n            \"lastName\": \"\",\n            \"clubName\": \"\",\n            \"warnings\": 0,\n            \"score\": 0\n        },\n        \"blue\": {\n            \"playerColor\": \"blue\",\n            \"firstName\": \"Blue First Name\",\n            \"lastName\": \"\",\n            \"clubName\": \"\",\n            \"warnings\": 0,\n            \"score\": 0\n        }\n    }\n\n    const [playerEntries, setPlayerEntries] = useState(initialPlayerEntries);\n\n    const setDetails = () => {\n        //set the matchInformation to the matchState, playerInformation from the App Component and close the playerEntryView\n        const [matchState, setMatchState] = matchStateMethod;\n        const [, setMatchPlayerInformation] = matchPlayerInformationMethod;\n        const [totalDisplayState, setTotalDisplayState] = totalDisplayMethod;\n\n        //determine game type\n        const gameType = () => {\n            let gameType = \"\";\n            if (matchInformation.style === \"Greco-Roman\") {\n                gameType = \"Senior Greco-Roman\";\n            } else if (matchInformation.age === \"18-20 yrs\" || matchInformation.age === \"21yrs+\") {\n                gameType = \"Senior Freestyle\";\n            } else {\n                gameType = \"Junior Freestyle\";\n            }\n            return gameType;\n        }\n\n        const theGameType = gameType();\n\n        let initialTimerValue = \"\";\n\n        if (theGameType === \"Junior Freestyle\") {\n            initialTimerValue = \"2:00\";\n        } else {\n            initialTimerValue = \"3:00\";\n        }\n\n\n        setMatchState({ ...matchState, ...matchInformation, playersSet: true, currentTime: initialTimerValue, gameType: theGameType });\n        const copyPlayerEntries = { ...playerEntries };\n        setMatchPlayerInformation(copyPlayerEntries);\n        setTotalDisplayState({ ...totalDisplayState, playerEntryView: false });\n\n    }\n\n    return (\n\n        // < div style={visibility ? {\n        //     top: \"0\",\n        //     left: \"0\",\n        //     width: \"100vw\",\n        //     height: \"100vh\",\n        //     position: \"fixed\",\n        //     display: \"flex\",\n        //     justifyContent: \"center\",\n        //     alignItems: \"center\",\n        //     backgroundColor: \"#8080807E\",\n\n        // }\n        //     : { display: \"none\" }}>\n        //     <div className=\"playerEntryView\" id=\"playerEntryView\">\n        //         <div>\n        //             <h1>Match Details</h1>\n        //         </div>\n        //         \n        //         \n        //     </div>\n        // </div>\n\n        <Dialog open={visibility} maxWidth=\"lg\"  >\n            <DialogTitle style={{ color: \"black\" }}>Match Details</DialogTitle>\n            <DialogContent>\n                <Grid container id=\"playerEntryMain\" spacing={3} alignItems=\"stretch\" direction=\"row\">\n                    <Grid item xs={4}>\n                        <PlayerEntry playerColour={\"red\"} playerEntries={playerEntries} setPlayerEntries={setPlayerEntries} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <PlayerEntry playerColour={\"blue\"} playerEntries={playerEntries} setPlayerEntries={setPlayerEntries} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <MatchInformation matchInformation={matchInformation} setMatchInformation={setMatchInformation} />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <ButtonGroup color=\"primary\" size=\"large\" variant=\"contained\">\n                    <ContextTotalDisplayMethod.Provider value={totalDisplayMethod}>\n                        <SubmitMatchDetails setDetails={setDetails} />\n                    </ContextTotalDisplayMethod.Provider>\n                </ButtonGroup>\n            </DialogActions>\n        </Dialog>\n\n    );\n\n};\n\ntype PlayerEntryProps = {\n    playerColour: keyof MatchPlayerInformation;\n    playerEntries: MatchPlayerInformation;\n    setPlayerEntries: React.Dispatch<React.SetStateAction<MatchPlayerInformation>>;\n}\n\nconst PlayerEntry: React.VFC<PlayerEntryProps> = ({ playerColour, playerEntries, setPlayerEntries }) => {\n    return (\n        <Paper className={\"playerEntry \" + playerColour} elevation={3} style={{ height: \"90%\" }}>\n            <Grid container direction={\"column\"} spacing={3}>\n                <Grid item style={{ color: playerColour, textAlign: \"center\" }}>\n                    {capitaliseString(playerColour)}\n                </Grid>\n                <Grid item>\n                    <TextField label={capitaliseString(playerColour) + \"'s First Name\"} variant=\"outlined\" value={playerEntries[playerColour].firstName} onChange={e => {\n                        const newPlayerEntry = { ...playerEntries };\n                        newPlayerEntry[playerColour].firstName = e.target.value;\n                        setPlayerEntries(newPlayerEntry);\n                    }} />\n                </Grid>\n                <Grid item>\n                    <TextField label={capitaliseString(playerColour) + \"'s Last Name\"} variant=\"outlined\" value={playerEntries[playerColour].lastName} onChange={e => {\n                        const newPlayerEntry = { ...playerEntries };\n                        newPlayerEntry[playerColour].lastName = e.target.value;\n                        setPlayerEntries(newPlayerEntry);\n                    }} />\n                </Grid>\n                <Grid item>\n                    <TextField label={capitaliseString(playerColour) + \"'s Club Name\"} variant=\"outlined\" value={playerEntries[playerColour].clubName} onChange={e => {\n                        const newPlayerEntry = { ...playerEntries };\n                        newPlayerEntry[playerColour].clubName = e.target.value;\n                        setPlayerEntries(newPlayerEntry);\n                    }} />\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n\n};\n\ntype MatchInformationProps = {\n    matchInformation: MatchInformation;\n    setMatchInformation: React.Dispatch<React.SetStateAction<MatchInformation>>;\n};\n\nconst MatchInformation: React.VFC<MatchInformationProps> = ({ matchInformation, setMatchInformation }) => {\n    const ageOptions = Object.keys(categories).map((value) => <MenuItem value={value} key={value}>{value}</MenuItem>);\n    const genderOptions = Object.keys(categories[matchInformation.age]).map((value) => <MenuItem value={value} key={value}>{value}</MenuItem>);\n    const styleOptions = Object.keys(categories[matchInformation.age][matchInformation.gender]).map((value: string) => <MenuItem value={value} key={value}>{value}</MenuItem>);\n    const weightOptions = categories[matchInformation.age][matchInformation.gender][matchInformation.style].map((value: number) => <MenuItem value={value.toString()} key={value}>{value}</MenuItem>);\n\n    const updateDropDowns = (e: React.ChangeEvent<{ name?: string | undefined; value: unknown; }>, dropDown: string) => {\n        //resets every subsequent dropdown to the default 0 index value, forces an update of state to ensure that valid options are stored\n        let eTargetValue: string = \"\";\n        if (typeof e.target.value === \"string\") {\n            eTargetValue = e.target.value;\n        }\n        switch (dropDown) {\n            case \"mat\":\n                setMatchInformation({ ...matchInformation, mat: eTargetValue });\n                break;\n            case \"age\":\n                {\n                    let zeroGender = Object.keys(categories[eTargetValue])[0];\n                    let zeroStyle = Object.keys(categories[eTargetValue][zeroGender])[0];\n                    let zeroWeight = categories[eTargetValue][zeroGender][zeroStyle][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            age: eTargetValue,\n                            gender: zeroGender,\n                            style: zeroStyle,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"gender\":\n                {\n                    let zeroStyle = Object.keys(categories[matchInformation.age][eTargetValue])[0];\n                    let zeroWeight = categories[matchInformation.age][eTargetValue][zeroStyle][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            gender: eTargetValue,\n                            style: zeroStyle,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"style\":\n                {\n                    let zeroWeight = categories[matchInformation.age][matchInformation.gender][eTargetValue][0];\n                    setMatchInformation(\n                        {\n                            ...matchInformation,\n                            style: eTargetValue,\n                            weight: zeroWeight\n                        });\n                }\n                break;\n            case \"weight\":\n                setMatchInformation(\n                    {\n                        ...matchInformation,\n                        weight: parseInt(eTargetValue)\n                    });\n                break;\n            default:\n                throw new Error(\"Error: dropdowns\");\n        }\n    }\n\n    return (\n        <Paper className=\"matchInformation\" elevation={3}>\n            <Grid container direction={\"column\"} spacing={3}>\n                <Grid item>\n                    <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\n                        <InputLabel>Mat</InputLabel>\n                        <Select\n                            value={matchInformation.mat}\n                            onChange={e => updateDropDowns(e, \"mat\")}\n                            label=\"Mat\">\n                            <MenuItem value=\"A\">A</MenuItem>\n                            <MenuItem value=\"B\">B</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item>\n                    <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\n                        <InputLabel>Age</InputLabel>\n                        <Select\n                            value={matchInformation.age}\n                            onChange={e => updateDropDowns(e, \"age\")}\n                            label=\"Age\">\n                            {ageOptions}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item>\n                    <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\n                        <InputLabel>Gender</InputLabel>\n                        <Select\n                            value={matchInformation.gender}\n                            onChange={e => updateDropDowns(e, \"gender\")}\n                            label=\"Gender\">\n                            {genderOptions}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item>\n                    <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\n                        <InputLabel>Style</InputLabel>\n                        <Select\n                            value={matchInformation.style}\n                            onChange={e => updateDropDowns(e, \"style\")}\n                            label=\"Style\">\n                            {styleOptions}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item>\n                    <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\n                        <InputLabel>Weight</InputLabel>\n                        <Select\n                            value={matchInformation.weight}\n                            onChange={e => updateDropDowns(e, \"weight\")}\n                            label=\"Weight\">\n                            {weightOptions}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n\n};\n\ntype SubmitMatchDetails = {\n    setDetails: () => void;\n};\n\nconst SubmitMatchDetails: React.VFC<SubmitMatchDetails> = ({ setDetails }) => {\n    const totalDisplayMethod = useContext(ContextTotalDisplayMethod);\n    const [totalDisplayState, setTotalDisplayState] = totalDisplayMethod;\n    return (\n        <>\n            <Button onClick={setDetails}>Confirm</Button>\n            <Button onClick={() => setTotalDisplayState({ ...totalDisplayState, playerEntryView: false })}>Cancel</Button>\n        </>\n    );\n};","import React from 'react';\nimport './MainHeader.css';\n\ntype MainHeaderProps = {\n    visibility: boolean;\n};\n\nexport const MainHeader: React.VFC<MainHeaderProps> = ({ visibility }) => {\n    return (\n        <div id=\"mainHeader\" style={visibility ? {} : { visibility: \"hidden\" }}>\n            <span id=\"logo\"><img alt=\"Wrestling WA Logo\" src=\"http://wrestlingwa.org/wp-content/uploads/wwa_logo.png\" /></span>\n            <span id=\"fedName\">Wrestling Western Australia <br /> Scoreboard</span>\n        </div>\n    )\n};","import { ButtonGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button/Button';\nimport React from 'react';\nimport './Navigation.css';\n\ntype NavigationProps = {\n    visibility: boolean;\n    totalDisplayMethod: TotalDisplayMethod;\n    ResetCurrentMatch: () => void;\n};\n\nexport const Navigation: React.VFC<NavigationProps> = ({ visibility, totalDisplayMethod, ResetCurrentMatch }) => {\n    console.log(\"nav: \" + visibility);\n    console.log(totalDisplayMethod);\n    let [totalDisplayState, setTotalDisplayState] = totalDisplayMethod;\n\n    return (\n        <div id=\"navigation\" style={visibility ? {} : { visibility: \"hidden\" }}>\n            <ButtonGroup color=\"primary\" size=\"large\" variant=\"contained\">\n                <Button onClick={() => setTotalDisplayState({ ...totalDisplayState, playerEntryView: true })}>Set Match</Button>\n                <Button onClick={() => ResetCurrentMatch()}>Reset All</Button>\n                <Button disabled>Import</Button>\n                <Button disabled>Fixtures</Button>\n                <Button disabled>{\"<<\"}</Button>\n                <Button disabled>{\">>\"}</Button>\n            </ButtonGroup>\n        </div>\n    )\n};","//Maintain all control logic and interfaces for scoreboard in this file.\n\nimport { Button } from '@material-ui/core';\nimport React from 'react';\nimport './Scoreboard.css';\n\ntype PointsControlProps = {\n    playerColour: keyof MatchPlayerInformation;\n    updateScore: (player: keyof MatchPlayerInformation, score: number) => void;\n};\n\nexport const PointsControl: React.VFC<PointsControlProps> = ({ playerColour, updateScore }) => {\n\n    return (\n        <div className={\"points-control \" + playerColour}>\n            <div className=\"buttonsRow\">\n                <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => updateScore(playerColour, 5)}>+5</Button>\n                <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => updateScore(playerColour, 4)}>+4</Button>\n                <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => updateScore(playerColour, 2)}>+2</Button>\n                <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => updateScore(playerColour, 1)}>+1</Button>\n                <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => updateScore(playerColour, -1)}>-1</Button>\n            </div>\n        </div>\n    )\n};\n\ntype PenaltyControlProps = {\n    playerColour: keyof MatchPlayerInformation;\n    handleWarningButton: (playerColour: keyof MatchPlayerInformation) => void;\n    handleShotClockButton: (playerColour: keyof MatchPlayerInformation) => void;\n};\n\nexport const PenaltyControl: React.VFC<PenaltyControlProps> = ({ playerColour, handleWarningButton, handleShotClockButton }) => {\n\n    return (\n        <div className={\"penalty \" + playerColour}>\n            <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => handleShotClockButton(playerColour)}>Shot Clock</Button>\n            <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={() => handleWarningButton(playerColour)}>Warning</Button>\n        </div>\n    )\n};\n\ntype PinControlProps = {\n    playerColour: keyof MatchPlayerInformation;\n    handlePinButton: (playerColour: keyof MatchPlayerInformation) => void;\n};\n\nexport const PinControl: React.VFC<PinControlProps> = ({ playerColour, handlePinButton }) => {\n\n    return (\n        <div className={\"pin \" + playerColour}>\n            <Button color=\"primary\" size=\"medium\" variant=\"contained\" style={{ color: \"white\" }} onClick={\n                () => {\n                    handlePinButton(playerColour);\n                }}>Pin!</Button>\n        </div>\n    )\n};","import React, { useCallback, useEffect } from 'react';\nimport './Scoreboard.css';\nimport { capitaliseString } from './common';\nimport { PointsControl, PenaltyControl, PinControl } from './ScoreboardControl';\nimport type Timer from 'easytimer.js';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst phases = [\"Before Match\", \"Period 1\", \"Between P1\", \"Rest\", \"Between P2\", \"Period 2\", \"Match End\"];\nconst timeRest = 30; // should be 30 seconds\n\ntype ScoreboardProps = {\n    visibility: boolean;\n    matchPlayerInformationMethod: MatchPlayerInformationMethod;\n    matchStateMethod: MatchStateMethod;\n    timer: Timer;\n    Victory: Victory;\n};\n\nexport const Scoreboard: React.VFC<ScoreboardProps> = ({ visibility, matchPlayerInformationMethod, matchStateMethod, timer, Victory }) => {\n\n    const [matchPlayerInformation, setMatchPlayerInformation] = matchPlayerInformationMethod;\n    const [matchState, setMatchState] = matchStateMethod;\n\n    const updateScore = useCallback((player: keyof MatchPlayerInformation, score: number) => {\n        //Need to add if timer is running then allow this\n        const allowableScoreChanges = [-1, 1, 2, 4, 5];\n        if (allowableScoreChanges.includes(score) && matchState.started) {\n            const newMatchPlayerInformation = { ...matchPlayerInformation };\n            if (!(newMatchPlayerInformation[player].score === 0 && score < 0)) { //make sure score can't go below 0\n                newMatchPlayerInformation[player].score += score;\n                setMatchPlayerInformation(newMatchPlayerInformation);\n                if (matchState.shotClockOn && score > 0) {\n                    setMatchState({ ...matchState, shotClockOn: false });\n                }\n                checkVictoryState(matchPlayerInformation, matchState, timer, Victory);\n            }\n        }\n    }, [Victory, matchPlayerInformation, matchState, setMatchPlayerInformation, setMatchState, timer]);\n\n    const handlePinButton = (playerColour: string) => {\n        if (matchState.started) {\n            timer.pause();\n            Victory(playerColour, \"Fall\");\n        }\n    }\n\n    const updateCurrentTime = useCallback(\n        () => {\n            setMatchState({ ...matchState, currentTime: timer.getTimeValues().toString(['minutes', 'seconds']).slice(1) });\n            if (matchState.shotClockOn) {\n                if (timer.getTotalTimeValues().seconds - matchState.shotClockSeconds === 0) {\n                    setMatchState({ ...matchState, shotClockOn: false });\n                    updateScore(Object.keys(matchPlayerInformation).filter((key) => key !== matchState.shotClockPlayer)[0] as keyof MatchPlayerInformation, 1)\n                }\n            }\n        },\n        [matchPlayerInformation, matchState, setMatchState, timer, updateScore],\n    );\n\n    const resolveTimerEnd = useCallback(\n        () => {\n            if (matchState.phase === phases[1]) { //end of first period\n                setMatchState({ ...matchState, phase: phases[2], currentTime: \"0:00\", paused: true });\n            } else if (matchState.phase === phases[3]) { //end of rest period\n                setMatchState({ ...matchState, phase: phases[4], currentTime: \"0:00\", paused: true });\n            } else if (matchState.phase === phases[5]) { //end of second period\n                setMatchState({ ...matchState, phase: phases[6], currentTime: \"0:00\", paused: true });\n            }\n        },\n        [matchState, setMatchState],\n    );\n\n    useEffect(() => {\n        console.log(\"event listener Made!'\");\n        timer.addEventListener('secondsUpdated', updateCurrentTime);\n        timer.addEventListener('targetAchieved', resolveTimerEnd);\n        // returned function will be called on component unmount\n        return () => {\n            timer.removeEventListener('secondsUpdated', updateCurrentTime);\n            timer.removeEventListener('targetAchieved', resolveTimerEnd);\n        };\n    }, [resolveTimerEnd, timer, updateCurrentTime]);\n\n    const handleWarningButton = (playerColour: keyof MatchPlayerInformation) => {\n        if (matchPlayerInformation[playerColour].warnings < 2) {\n            let newMatchPlayerInformation = { ...matchPlayerInformation };\n            newMatchPlayerInformation[playerColour].warnings += 1;\n            setMatchPlayerInformation(newMatchPlayerInformation);\n        } else {\n            timer.pause();\n            Victory(Object.keys(matchPlayerInformation).filter((element) => element !== playerColour)[0], \"Disqualification\");\n        }\n    }\n\n    const handleShotClockButton = (playerColour: keyof MatchPlayerInformation) => {\n        console.log(matchState.started + \" \" + !matchState.shotClockOn + \" \" + timer.getTotalTimeValues().seconds);\n        if (matchState.started && !matchState.shotClockOn && timer.getTotalTimeValues().seconds >= 30) {\n            if (matchState.phase === phases[1] || matchState.phase === phases[5]) {\n                setMatchState({ ...matchState, shotClockOn: true, shotClockPlayer: playerColour, shotClockSeconds: timer.getTotalTimeValues().seconds - 30 })\n            }\n        }\n    }\n\n    return (\n        <div id=\"outer\">\n            <div id=\"scoreboard\" style={visibility ? {} : { visibility: \"hidden\" }}>\n                <PlayerDataView playerColour=\"red\" matchPlayerInformation={matchPlayerInformation} />\n                <MiddleView matchState={matchState} setMatchState={setMatchState} timer={timer} matchPlayerInformation={matchPlayerInformation} Victory={Victory} />\n                <PlayerDataView playerColour=\"blue\" matchPlayerInformation={matchPlayerInformation} />\n                <ScoreBox playerColour=\"red\" matchPlayerInformation={matchPlayerInformation} matchState={matchState} timer={timer} />\n                <ScoreBox playerColour=\"blue\" matchPlayerInformation={matchPlayerInformation} matchState={matchState} timer={timer} />\n                <PointsControl playerColour=\"red\" updateScore={updateScore} />\n                <PointsControl playerColour=\"blue\" updateScore={updateScore} />\n                <PenaltyControl playerColour=\"red\" handleWarningButton={handleWarningButton} handleShotClockButton={handleShotClockButton} />\n                <PenaltyControl playerColour=\"blue\" handleWarningButton={handleWarningButton} handleShotClockButton={handleShotClockButton} />\n                <PinControl playerColour=\"red\" handlePinButton={handlePinButton} />\n                <PinControl playerColour=\"blue\" handlePinButton={handlePinButton} />\n            </div>\n        </div>\n    )\n};\n\ntype MiddleViewProps = {\n    matchState: MatchState;\n    timer: Timer;\n    setMatchState: React.Dispatch<React.SetStateAction<MatchState>>;\n    matchPlayerInformation: MatchPlayerInformation;\n    Victory: Victory;\n};\n\nconst MiddleView: React.VFC<MiddleViewProps> = ({ matchState, timer, setMatchState, matchPlayerInformation, Victory }) => {\n\n    const playButtonPress = () => {\n        let initialTimerValue = 0;\n        if (matchState.gameType === \"Junior Freestyle\") {\n            initialTimerValue = 120;\n        } else {\n            initialTimerValue = 180;\n        }\n\n        if (matchState.phase === phases[0] && matchState.playersSet) { //if phase is Before Match\n            setMatchState({ ...matchState, phase: phases[1], started: true });\n            timer.start({ countdown: true, startValues: { seconds: initialTimerValue } });\n        } else if (matchState.phase === phases[2] && matchState.started) { //if between phase but before timer start\n            setMatchState({ ...matchState, phase: phases[3], paused: false })\n            timer.start({ countdown: true, startValues: { seconds: timeRest } });\n        } else if (matchState.phase === phases[4] && matchState.started) { //if period 2 but before timer start\n            setMatchState({ ...matchState, phase: phases[5], paused: false })\n            timer.start({ countdown: true, startValues: { seconds: initialTimerValue } });\n        } else if (matchState.phase === phases[6] && matchState.started) { //if end of period 2\n            console.log(`Match has ended`);\n            checkVictoryState(matchPlayerInformation, matchState, timer, Victory);\n        } else if (matchState.started && !matchState.paused) { //pause\n            setMatchState({ ...matchState, paused: true })\n            timer.pause();\n        } else if (matchState.started && matchState.paused) { //unpause\n            setMatchState({ ...matchState, paused: false })\n            timer.start();\n        }\n    }\n\n    return (\n        <div className=\"middle\" style={matchState.paused ? { backgroundColor: \"grey\" } : {}}>\n            <span id=\"period\">{matchState.phase}</span><br />\n            <span id=\"gameType\">{`${matchState.gameType}, ${matchState.age}, ${matchState.weight}kg`}</span>\n            <br />\n            <span id=\"timer\">{matchState.currentTime}</span>\n            <br />\n            <button className=\"timer\" id=\"startTimer\" onClick={playButtonPress}>{\n                (matchState.phase === \"Before Match\")\n                    ? \"▶\" : (!matchState.paused) ? <FontAwesomeIcon icon={[\"fas\", \"pause\"]} /> : (matchState.paused) ? \"▶\" : \"bug\"\n            }\n            </button>\n        </div>\n    )\n};\n\ntype PlayerDataViewProps = {\n    playerColour: keyof MatchPlayerInformation;\n    matchPlayerInformation: MatchPlayerInformation;\n};\n\nconst PlayerDataView: React.VFC<PlayerDataViewProps> = ({ playerColour, matchPlayerInformation }) => {\n\n    return (\n        <div className={\"playerData \" + playerColour} >\n            <span className={\"firstName \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].firstName}</span><br />\n            <span className={\"lastName \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].lastName}</span><br />\n            <span className={\"clubName \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].clubName}</span>\n        </div >\n    )\n};\n\ntype ScoreBoxProps = {\n    playerColour: keyof MatchPlayerInformation;\n    matchPlayerInformation: MatchPlayerInformation;\n    matchState: MatchState;\n    timer: Timer;\n};\n\nconst ScoreBox: React.VFC<ScoreBoxProps> = ({ playerColour, matchPlayerInformation, matchState, timer }) => {\n    const warningMarkers = () => {\n        let numberOfMarkers = matchPlayerInformation[playerColour].warnings;\n        let warningMarkerText = \"\";\n        for (let i = 0; i < numberOfMarkers; i++) {\n            warningMarkerText += \"■\";\n        }\n        return warningMarkerText;\n    }\n    return (\n        <div className={\"scorebox \" + playerColour}>\n            <div className={\"markerWarning \" + capitaliseString(playerColour)}>{warningMarkers()}</div>\n            <div className={\"score \" + capitaliseString(playerColour)}>{matchPlayerInformation[playerColour].score}</div>\n            <div className={\"shotclock \" + capitaliseString(playerColour)} style={(matchState.shotClockOn && matchState.shotClockPlayer === playerColour) ? { visibility: \"visible\" } : {}}>{timer.getTotalTimeValues().seconds - matchState.shotClockSeconds}</div>\n        </div >\n    )\n};\n\nconst checkVictoryState = (matchPlayerInformation: MatchPlayerInformation, matchState: MatchState, timer: Timer, Victory: Victory) => { //Resolves victory conditions\n    // Intra Time Victory Conditions\n    let technicalSuperiorityThreshold = 10;\n    if (matchState.style === \"Greco-Roman\") {\n        // Greco-Roman Technical Superiority\n        technicalSuperiorityThreshold = 8;\n    } else if (matchState.style === \"Freestyle\") {\n        // Freestyle Technical Superiority\n        technicalSuperiorityThreshold = 10;\n    }\n\n    if (matchPlayerInformation.blue.score - matchPlayerInformation.red.score >= technicalSuperiorityThreshold) {\n        timer.pause();\n        Victory(\"blue\", \"Technical Superiority\");\n    } else if (matchPlayerInformation.red.score - matchPlayerInformation.blue.score >= technicalSuperiorityThreshold) {\n        timer.pause();\n        Victory(\"red\", \"Technical Superiority\");\n    }\n\n    //End of Time Victory Check\n    if (matchState.phase === phases[6]) {\n        if (matchPlayerInformation.blue.score === matchPlayerInformation.red.score) {\n            Victory(\"draw\", \"Points\");\n            console.log(\"Outcome is Draw\");\n        } else if (matchPlayerInformation.blue.score - matchPlayerInformation.red.score > 0) {\n            Victory(\"blue\", \"Points\");\n        } else {\n            Victory(\"red\", \"Points\");\n        }\n    }\n};","import React from 'react';\nimport './VictoryScreen.css';\n\ntype VictoryScreenProps = {\n    visibility: boolean;\n    victoryState: VictoryState;\n    SetVisibilityOf: (component: keyof TotalDisplayState, state: boolean) => void;\n};\n\nexport const VictoryScreen: React.VFC<VictoryScreenProps> = ({ visibility, victoryState, SetVisibilityOf }) => {\n    const victoryScreenView = () => {\n        if (victoryState.playerColour === \"draw\") {\n            return (\n                <div className=\"victoryScreenView\" style={{ backgroundColor: \"black\" }}>\n                    <p>Draw!</p>\n                    <button onClick={() => SetVisibilityOf(\"victoryScreen\", false)}>OK</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"victoryScreenView\" style={victoryState.playerColour === \"red\" ? { backgroundColor: \"red\" } : { backgroundColor: \"blue\" }}>\n                    <p>{victoryState.playerName} <br /> wins by <br /> {victoryState.reason}</p>\n                    <button onClick={() => SetVisibilityOf(\"victoryScreen\", false)}>OK</button>\n                </div>\n            );\n        }\n    }\n\n    return (\n        < div style={visibility ? {\n            top: \"0\",\n            left: \"0\",\n            width: \"100vw\",\n            height: \"100vh\",\n            position: \"fixed\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"#8080807E\",\n        }\n            : { display: \"none\" }}>\n            {victoryScreenView()}\n        </div>\n    )\n};\n\n","import React, { useState } from 'react';\nimport './App.css';\nimport Timer from 'easytimer.js';\nimport 'fontsource-roboto';\n\nimport { PlayerEntryView } from './PlayerEntryView';\nimport { MainHeader } from './MainHeader';\nimport { Navigation } from './Navigation';\nimport { Scoreboard } from './Scoreboard';\nimport { VictoryScreen } from './VictoryScreen';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst initialTotalDisplayState: TotalDisplayState = {\n  mainHeader: true,\n  navigation: true,\n  playerEntryView: false,\n  scoreboard: true,\n  victoryScreen: false,\n};\n\nconst initialMatchPlayerInformation: MatchPlayerInformation = {\n  red: {\n    \"playerColor\": \"red\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"clubName\": \"clubName\",\n    \"warnings\": 0,\n    \"score\": 0\n  },\n  blue: {\n    \"playerColor\": \"blue\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"clubName\": \"clubName\",\n    \"warnings\": 0,\n    \"score\": 0\n  }\n};\n\nconst initialMatchState: MatchState = {\n  mat: \"\",\n  age: \"\",\n  gender: \"\",\n  style: \"\",\n  gameType: \"\",\n  weight: 0,\n  currentTime: \"0:00\",\n  playersSet: false,\n  started: false,\n  paused: false,\n  phase: \"Before Match\",\n  shotClockOn: false,\n  shotClockSeconds: 0,\n  shotClockPlayer: \"red\",\n};\n\nconst initialVictoryState: VictoryState = {\n  playerName: \"\",\n  playerColour: \"red\",\n  reason: \"\"\n};\n\nconst App: React.VFC = () => {\n  const [totalDisplayState, setTotalDisplayState] = useState(initialTotalDisplayState);\n  const totalDisplayMethod: TotalDisplayMethod = [totalDisplayState, setTotalDisplayState];\n\n  const [matchPlayerInformation, setMatchPlayerInformation] = useState(initialMatchPlayerInformation);\n  const matchPlayerInformationMethod: MatchPlayerInformationMethod = [matchPlayerInformation, setMatchPlayerInformation]\n\n  const [matchState, setMatchState] = useState(initialMatchState);\n  const matchStateMethod: MatchStateMethod = [matchState, setMatchState];\n\n  const [timer,] = useState(new Timer());\n  const [victoryState, setVictoryState] = useState(initialVictoryState);\n\n  const ResetCurrentMatch = () => {\n    setMatchPlayerInformation({ ...initialMatchPlayerInformation });\n    setMatchState({ ...initialMatchState });\n    timer.stop();\n  };\n\n  const Victory = (player: string, reason: string) => {\n    const playerInfo: { [playerColor: string]: MatchPlayer } = { ...matchPlayerInformation };\n    setTotalDisplayState({ ...totalDisplayState, victoryScreen: true });\n    if (player === \"draw\") {\n      setVictoryState({ ...victoryState, reason: reason, playerColour: player, playerName: player });\n    } else {\n      setVictoryState({ ...victoryState, reason: reason, playerColour: player, playerName: `${playerInfo[player].firstName} ${playerInfo[player].lastName}` });\n    }\n  }\n\n  const SetVisibilityOf = (component: keyof TotalDisplayState, state: boolean) => {\n    const newTotalDisplayState = { ...totalDisplayState };\n    newTotalDisplayState[component] = state;\n    setTotalDisplayState(newTotalDisplayState as TotalDisplayState);\n  };\n\n  console.log(matchState);\n  console.log(matchPlayerInformation);\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"rgba(255, 215, 0, 1)\",\n      },\n      action: {\n        disabledBackground: \"rgba(255, 215, 0, 0.5)\",\n\n      }\n    }\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <MainHeader visibility={totalDisplayState.mainHeader} />\n      <Navigation visibility={totalDisplayState.navigation} totalDisplayMethod={totalDisplayMethod} ResetCurrentMatch={ResetCurrentMatch} />\n      <PlayerEntryView visibility={totalDisplayState.playerEntryView} totalDisplayMethod={totalDisplayMethod} matchStateMethod={matchStateMethod} matchPlayerInformationMethod={matchPlayerInformationMethod} />\n      <Scoreboard visibility={totalDisplayState.scoreboard} matchPlayerInformationMethod={matchPlayerInformationMethod} matchStateMethod={matchStateMethod} timer={timer} Victory={Victory} />\n      <VictoryScreen visibility={totalDisplayState.victoryScreen} victoryState={victoryState} SetVisibilityOf={SetVisibilityOf} />\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}